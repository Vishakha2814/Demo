configurations {
    jaxb
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.1.RELEASE")
    }
}

println System.getProperty("java.home")

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'war'

war {
    baseName = 'skynetscore-rest-service'
    version =  '0.1.0'
}

repositories {
	jcenter()
	maven { url "http://repo.spring.io/libs-snapshot" }
    mavenCentral()
}

springBoot {
	mainClass = "com.skynetscore.Application"
}

// tag::wsdl[]
task genJaxb {
    ext.sourcesDir = "${buildDir}/generated-sources/jaxb"
    ext.classesDir = "${buildDir}/classes/jaxb"
    ext.schema = "http://demo.lyonsreg.com/webservices/atm/ATMService.asmx?WSDL"

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: "xjc", classname: "com.sun.tools.xjc.XJCTask",
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: "lyonsService.wsdl") {
                arg(value: "-wsdl")
                produces(dir: sourcesDir, includes: "**/*.java")
            }
            
            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: "lines,vars,source",
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: "**/*.java")
                include(name: "*.java")
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: "**/*.java")
                }
            }
        }
    }
}
// end::wsdl[]

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web") 
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'com.smartystreets.api', name: 'smartystreets-java-sdk', version: '1.0.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.7.0'
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '1.3.5.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-core', version: '4.1.3.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version: '3.2.0.RELEASE'
    compile group: 'javax.mail', name: 'mail', version: '1.4'
    compile group: 'com.google.guava', name: 'guava', version: '10.0.1'
    
    compile("org.springframework.ws:spring-ws-core")
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
    jaxb "com.sun.xml.bind:jaxb-xjc:2.1.7"
    
    runtime("mysql:mysql-connector-java:5.1.37")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
}

sourceSets {
	main.java.srcDirs=["src/main/java"]
}

task afterEclipseImport {
    dependsOn genJaxb
}